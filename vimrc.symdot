" Initialize and configure plugins
source ~/.vim/plugins.vim


filetype plugin indent on
syntax on

" source local vimrc file
if filereadable("~/.vim/local.vim")
    source ~/.vim/local.vim
endif

" Tabbing
set tabstop=4
set shiftwidth=4
set expandtab
set autoindent
set smartindent
set smarttab
set autoread

" Display
set mouse=a
set so=4
set showcmd

" Splits
set splitright

" Searching
set magic
set ignorecase
set smartcase

" Buffers
set hidden

" Completion
set omnifunc=syntaxcomplete#Complete
inoremap <NUL> <C-x><C-o>
" set completeopt=longest

" Make backspace behave the way I expect
set backspace=indent,eol,start

" Define the map Leader
let mapleader="\\"

" MARK: map

" Edit the .vimrc
nnoremap <Leader>ev :split $MYVIMRC<cr>
" Edit plugins.vim
nnoremap <Leader>ep :split ~/.vim/plugins.vim<cr>
" Source the .vimrc
nnoremap <Leader>sv :source $MYVIMRC<cr>


" Keybindings for Escape
inoremap jj <esc>
inoremap jk <esc>

" Convenience mappings

" Force save a file
cmap W w !sudo tee % >/dev/null

" trim whitespace from end of lines
nnoremap <Leader>t<space> :%s/\s\+$//<cr>

" Show / Toggle colorcolumn
set colorcolumn=0
let s:color_column_old = 81
function! s:ToggleColorColumn()
    if s:color_column_old == 0
        let s:color_column_old = &colorcolumn
        windo let &colorcolumn = 0
    else
        windo let &colorcolumn=s:color_column_old
        let s:color_column_old = 0
    endif
endfunction
nnoremap <silent> <Leader>8 :call <SID>ToggleColorColumn()<cr>

" Easy macro-replay
nnoremap Q @q
