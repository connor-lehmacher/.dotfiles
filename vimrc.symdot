" Initialize and configure plugins
source ~/.vim/plugins.vim

filetype plugin indent on
syntax on
syntax enable

" source local vimrc file
if filereadable("~/.vim/local.vim")
    source ~/.vim/local.vim
endif

" make vim completion better
set wildmode=longest:full,full
set wildmenu

" encoding
set encoding=utf8

" Tabbing
set tabstop=4
set shiftwidth=4
set expandtab
set autoindent
set smartindent
set smarttab
set autoread

" Display
set mouse=a
set so=4
set showcmd
set number
set nohlsearch
set laststatus=2
set background=dark

" Searching
set magic
set ignorecase
set smartcase
set incsearch

" Buffers
set hidden

" GUI
set guifont=Knack\ Regular\ Nerd\ Font:h14
set guicursor=a:blinkon0

" History
set undolevels=1000

" Virtualedit
set virtualedit=block

" Delete comment character when joining commented lines
set formatoptions+=j

" ag
set grepprg="ag --vimgrep"

" Completion
set omnifunc=syntaxcomplete#Complete
" inoremap <NUL> <C-x><C-o>
set completeopt=longest,menuone
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
inoremap <expr> <C-n> pumvisible() ? '<C-n>' :
  \ '<C-n><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'
inoremap <expr> <NUL> pumvisible() ? '<C-n>' :
  \ '<C-x><C-o><C-n><C-p><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'

" Make backspace behave the way I expect
set backspace=indent,eol,start

set fileformat=unix

" Escape more easily
inoremap jk <ESC>
" Easy macro-replay
nnoremap Q @q
" make Y more logical
nnoremap Y y$

" Leader mappings
let mapleader=" "

" Edit vimrc
nnoremap <Leader>ev :split $MYVIMRC<CR>
" Edit plugins
nnoremap <Leader>ep :split ~/.vim/plugins.vim<CR>
" Edit filetype file
nnoremap <expr> <Leader>ef ':split ~/.vim/ftplugin/' . &filetype . '.vim<CR>'
" Source vimrc
nnoremap <Leader>sv :source $MYVIMRC<CR>
" Install plugins
nnoremap <Leader>ip :PlugInstall<CR>
" Fuzzy file open
nnoremap <Leader>o :FZF<CR>
" Trim whitespace
noremap <Leader>t<Space> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar><CR>
" Generate ctags
nnoremap <Leader>mt :!ctags -R .<CR><CR>
" Toggle hlsearch
nnoremap <Leader>ht :set hlsearch!<CR>
" Force save a file
cmap W! w !sudo tee % >/dev/null


" Toggle colorcolumn
set colorcolumn=81
let s:color_column_old = 0
function! s:ToggleColorColumn()
    let l:tmp = &colorcolumn
    windo let &colorcolumn = s:color_column_old
    let s:color_column_old = l:tmp
endfunction
nnoremap <Leader>8 :call <SID>ToggleColorColumn()<CR>

" Spelling related things
if &spell
    nnoremap <Leader>z 1z=

    " Spelling corrections
    abbreviate teh the
end
